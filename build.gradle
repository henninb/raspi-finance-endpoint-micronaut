plugins {
    // id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    // id "org.jetbrains.kotlin.kapt" version "$kotlinVersion"
    // id "org.jetbrains.kotlin.plugin.allopen" version "$kotlinVersion"
    // id "groovy"
    // id "com.github.johnrengelman.shadow" version "6.1.0"
    // id "application"
    // id "com.github.ben-manes.versions" version "$gradleVersionsPlugin"


      id("org.jetbrains.kotlin.jvm") version "$kotlinVersion"
      id("org.jetbrains.kotlin.kapt") version "$kotlinVersion"
      id("org.jetbrains.kotlin.plugin.allopen") version "$kotlinVersion"
      id("org.jetbrains.kotlin.plugin.jpa") version "$kotlinVersion"
      id("com.github.johnrengelman.shadow") version "7.1.2"
      id("io.micronaut.application") version "3.4.1"
}

version "0.1"
group "finance"

repositories {
  mavenCentral()
    // jcenter()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    kapt("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.views:micronaut-views-thymeleaf")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    runtimeOnly("ch.qos.logback:logback-classic")
    //hibernate
    //implementation("org.hibernate:hibernate-core:6.1.6.Final")
    //runtimeOnly("com.h2database:h2")
    runtimeOnly("org.postgresql:postgresql:$postgresqlVersion")
    implementation("io.micronaut:micronaut-validation")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation ("org.apache.logging.log4j:log4j-core:2.14.0")
    //graphics
    implementation("net.coobird:thumbnailator:${thumbnailatorVersion}")

    runtimeOnly("ch.qos.logback:logback-classic:$logbackVersion")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
    testImplementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    testImplementation("io.micronaut:micronaut-inject-groovy")
    testImplementation("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    testImplementation("io.micronaut.test:micronaut-test-spock")
}

application {
    mainClass.set("finance.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "17"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "17"
        }
    }
}
graalvmNative.toolchainDetection.set(false)
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("finance.*")
    }
}
